services:
  - name: gitlab.udevs.io:5050/docker/docker:dind
    alias: docker

before_script:
  ## docker login
  - docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD
  ## install dependencies
  - apk update && apk --no-cache --update add build-base make openssh curl

stages:
  - build
  - deploy

build_image:
  image: gitlab.udevs.io:5050/docker/helm:dind
  stage: build
  script:
    - make build-image-dev TAG=$CI_PIPELINE_IID PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY ENG_TAG=latest
    - make push-image-kuber TAG=$CI_PIPELINE_IID PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY ENG_TAG=latest
  only:
    - master

test_build_image:
  stage: build
  script:
    - make build-image-test TAG=$CI_PIPELINE_IID GROUP=$CI_PROJECT_NAMESPACE PROJECT_NAME=$CI_PROJECT_NAME ENV_TAG=test
    - make push-image TAG=$CI_PIPELINE_IID GROUP=$CI_PROJECT_NAMESPACE PROJECT_NAME=$CI_PROJECT_NAME ENV_TAG=test
  only:
    - staging

deploy:
  image: gitlab.udevs.io:5050/docker/helm:dind
  stage: deploy
  script:
    - cp $TTU_KUBECONFIG ~/.kube/config
    - DEPLOYMENT=$(echo $CI_PROJECT_NAME | sed s/_/-/g | sed s/$CI_PROJECT_NAMESPACE-//g)
    - helm repo add --username $HELM_REGISTRY_USERNAME --password $HELM_REGISTRY_PASSWORD $HELM_REPO_NAME $HELM_REGISTRY_PATH
    - helm upgrade --install $DEPLOYMENT $HELM_REPO_NAME/$HELM_REPO_NAME --set=image.tag=$CI_PIPELINE_IID --values .helm/values-dev.yaml -n $NAMESPACE_DEV
  only:
    - master

test_deploy:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GITLAB_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -p $TTU_TEST_SSH_PORT -o StrictHostKeyChecking=no $TTU_TEST_USER@$TTU_TEST_HOST 'docker service update --with-registry-auth
      --image '$CI_REGISTRY'/'$CI_PROJECT_NAMESPACE'/'$CI_PROJECT_NAME':'$CI_PIPELINE_IID' '$CI_PROJECT_NAME''
  only:
    - staging
